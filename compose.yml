services:

  bloomhub:
    container_name: bloomhub
    profiles:
      - prod
      - dev
      - test
    pull_policy: build
    build:
      dockerfile: ./Dockerfile
    depends_on:
      - db
    develop:
      watch:
        - action: rebuild
          path: ./app
        - action: sync+restart
          path: ./web
          target: /app/web
#    volumes:
#      - ./web:/app/web   #map your frontend
    ports:
      - 80:80
    networks:
      - garden-network

  bloomhub_test:
    container_name: bloomhub-test
    profiles:
      - test
    build:
      dockerfile: ./test.Dockerfile
    pull_policy: build
    depends_on:
      - db_test
    networks:
      - garden-network

  
  db:
    container_name: garden-db
    profiles:
      - prod
      - dev
    image: postgres
    hostname: db
    restart: unless-stopped
    environment:
      POSTGRES_USER: db #${GARDEN_DB_USER}
      POSTGRES_PASSWORD: db #${GARDEN_DB_PASSWORD}
      POSTGRES_DB: garden #${GARDEN_DB_NAME}
    ports:
      - 5432:5432
    networks:
      - garden-network

  db_test:
    container_name: garden-test-db
    profiles:
      - test
      - dev
    image: postgres
    hostname: test_db
    restart: unless-stopped
    environment:
      POSTGRES_USER: db #${GARDEN_DB_USER}
      POSTGRES_PASSWORD: db #${GARDEN_DB_PASSWORD}
      POSTGRES_DB: garden_test #${GARDEN_DB_NAME}
#    ports:
#      - 5432:5432
    networks:
      - garden-network

  pgadmin:
    container_name: pgadmin
    profiles:
      - dev
    image: dpage/pgadmin4
    pull_policy: always
    depends_on:
      - db
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - 8080:80
    networks:
      - garden-network

networks:
  garden-network:
    name: garden-network
